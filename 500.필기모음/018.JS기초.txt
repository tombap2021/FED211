[ 자바스크립트란? ]
- 고정적인 html구조와 CSS로 디자인된 웹문서의
디자인 혹은 기능적으로 구현된 것을 변경하기 위해
개발된 브라우저 전용 프로그래밍 언어다.

- 자바스크립트와 자바언어는 다르다!
(자바스크립트를 줄여서 "자바"라고 하지말자! 그냥 JS라고 하자!)

[ JS의 코딩구역 ]
1. 인터널방식(internal) 
- html의 script 요소 내부 데이터로 코딩함
2. 익스터널방식(external)
- JS외부파일로 확장자가 js임
- html 페이지에서는 script요소에 src속성의 값으로 파일위치를 지정한다.
3. 이벤트 속성에 인라인 코딩
- html요소의 이벤트 속성값으로 JS코드를 작성함
- 예) onclick="값" / onmouseover="값"

[ JS의 역할 ]
1. HTML을 변경한다!
2. CSS의 디자인요소를 재정의한다!

[ 각 언어별 역할 비유 ]
1. HTML(구조) - 건물의 콘크리트 구조물
2. CSS(디자인) - 건물의 인테리어, 익스테리어
3. JS(프로그래밍) - 건물의 전기, 수도, 엘리베이터 등
                    기능적인 부분

[ JS의 화면출력 ]
1. document.write(내용) - html문서 상단에 출력됨
2. alert(내용) - 팝업형식의 경고창이 출력됨
3. console.log(내용) - 콘솔창에 출력됨
(콘솔은 브라우저 엔진에서 관할하는 내부출력모드)


[ JS의 함수 ]
- 정의: 특정실행코드를 특정이벤트에 실행하도록
    호출시에만 코드를 실행하는 코드저장공간
- 형식: function 함수명(변수){코드구역}
- 호출: 함수명(값) - 값은 함수의 변수 개수만큼 보냄

[ JS의 이벤트란? ]
- 브라우저에서 실행되는 입력관련 시점을 구분하여
알려주는 요소
- 이벤트 종류:
1) 마우스관련 이벤트
- click, dblclick, mouseover, mouseout, ...
2) 키보드관련 이벤트
- keydown, keyup, keypress, ...

- 이벤트 발생 시점에 함수를 호출하여 의도한
html,css변경을 실행함

- 이벤트와 함수를 연결하려면 html 요소 속성에
이벤트속성이 이미 만들어져 있다!!!
이 속성값으로 함수를 호출한다!

[ HTML 이벤트 속성 ]
- on+이벤트명 = 값
예) onmouseover = "" / onkeypress=""

[ JS에서 따옴표의 의미! ]
- 값을 의미!(string : 문자값)
- 따옴표를 쓰지 않은 문자는 일반적으로 변수/객체이름이다!

[ JS에서 이퀄의 의미! ]
- 이퀄은 오른쪽의 값이 왼쪽에 할당됨을 의미(들어감!)

[ JS에서 점(.)의 의미! ]
- 객체의 하위 메서드나 속성으로 들어감을 의미
- 하위 메서드나 속성을 선택 후 다시 점을 찍으면
그 하위의 속성이나 메서드로 들어감
- 객체란 프로그래밍을 할 수 있도록 미리 만들어 놓은
코드 집합체(여러가지 함수나 속성들이 셋팅되어 있음)
- 메서드는 객체에 만들어진 함수를 메서드라고 부른다
예)
우주.은하계.태양계.지구.대한민국.서울.강동구.동원빌딩.5층.506호.내자리

[ JS의 코드 마무리는 세미콜론;;;;;;;;; ]
- JS코드의 끝에는 세미콜론으로 마무리한다!
- 세미콜론이 안붙는 경우: 함수끝, 제어문끝

(참고: 자동세미콜론삽입
    ASI(Automatic Semicolon Insertion)
    - 브라우저가 세미콜론이 필요한 부분에 구문분석을
    하여 자동으로 세미콜론을 실행전에 넣어주는 기능
    - 주의사항: 편리할 수 있지만 자동 구문분석시
    오류분석이 있을 수 있으므로 개발자가 직접 세미콜론을
    넣어주는게 좋다!!!
)

[ JS에서 요소를 선택하는 방법 ]

- document 객체 : html문서 전체를 담고 있는 DOM객체
- DOM(Document Object Model)
    : 문서에 있는 각 요소로 접근할 수 있는 방법론을
    가지는 모델링

1. 아이디요소 선택법 (getElementById 메서드)
document.getElementById(아이디명)
- html요소 중 아이디요소는 유일하므로 한번에 선택 가능

- get 가져와라
- Element 요소 하나를
- By Id 아이디에 의한 것으로

2. 클래스요소 선택법 (getElementsByClassName 메서드)
document.getElementsByClassName(클래스명)
- html요소 중 클래스요소는 여러개 올 수 있기때문에
컬렉션집합을 만들어서 관리하므로 순번으로 선택해야함!
- .item(순번) 또는 [순번]
- 순번은 0부터!!!

- get 가져와라
- Elements 요소들을
- By ClassName 클래스명에 의한 것으로

예) 해당클래스명을 가진 요소 중 첫번째 것 선택
document.getElementsByClassName(클래스명).item(0)
또는
document.getElementsByClassName(클래스명)[0]
- 클래스를 단 하나만 사용했어도 0번이라고 해야함!

3. 태그요소 선택법(getElementsByTagName 메서드)
document.getElementsByTagName(요소명)
- html요소 중 태그요소는 여러개 올 수 있기에
컬렉션 집합을 만들어서 관리하므로 순번으로 선택해야함!
- .item(순번) 또는 [순번]
- 순번은 0부터!!!

- get 가져와라
- Elements 요소들을
- By TagName 태그명에 의한 것으로

예) 해당요소명을 가진 요소들 중 세번째 것 선택
document.getElementsByTagName(태그명).item(2)
또는
document.getElementsByTagName(태그명)[2]

[ JS에서 요소 선택 후 CSS변경법 ]
선택요소.style.스타일시트속성명 = 속성값
- style 객체 하위에 스타일시트 속성들이 있다!
- 스타일시트 속성명은 모두 변수형으로 만들어져 있다
예) font-size -> fontSize
    이음절 이상 속성명에 데쉬(-)는 모두 없애고 
    다음단어 첫글자를 대문자로 쓴다!
- 이퀄 오른쪽에 값을 써서 CSS를 셋팅한다!
-> JS에서 CSS를 변경하면 요소태그 내부에 style속성으로
인라인코딩되어 들어간다!(최우선순위로 적용됨)

[ JS에서 코드를 재사용하는 방법 ]
- 선택요소를 변수에 넣기!
- 변수는 어떤 값이나 객체를 저장하는 공간
- 변수명은 그 저장된 공간의 주소명이다!
- 변수사용법: var 변수명 = 값
- 변수는 따옴표로 싸지 않은 문자다!!!!!!!!